{
  "fcn": {
    "模块": "自定义",
    "参数说明": "",
    "接口功能详述": "自定义函数",
    "返回参数": "",
    "示例": "function filename(actor) \n\t\nend"
  },
  "init": {
    "模块": "dup",
    "参数说明": "",
    "接口功能详述": "",
    "返回参数": "",
    "示例": "local dup_task_info = \"playegame_dup_task_info\"\r\n-- 进入副本后\r\nfunction PlayeGame.afterEnter(actor, mapId, state, nextStateStartTime, configId)\r\n    local taskInfo = getenvirvar(mapId, dup_task_info)\r\n    if table.isEmpty(taskInfo) then\r\n        gameDebug.error(actor:toString(), \"XXXXXX副本任务为空:\", configId)\r\n    end\r\n    this.resDupTaskAsOne(actor, taskInfo)\r\nend\r\n\r\n-- 副本阶段更新\r\nfunction PlayeGame.stateUpdate(system, mapId, state, nextStateStartTime, configId)\r\n    if state == DuplicateState.PREPARE then\r\n        this.initDup(mapId, configId)\r\n    elseif state == DuplicateState.FIGHT then\r\n        -- 战斗阶段\r\n        local taskInfo = getenvirvar(mapId, dup_task_info) or {}\r\n        this.resDupTaskAsAll(mapId, taskInfo)\r\n        DuplicateCommon.ResStateInfoAsAll(mapId, state, nextStateStartTime, configId)\r\n    elseif state == DuplicateState.FINISH then\r\n        this.settlement(mapId, configId)\r\n        DuplicateCommon.ResStateInfoAsAll(mapId, state, nextStateStartTime, configId)\r\n    end\r\nend\r\n\r\n-- 副本怪物死亡\r\nfunction PlayeGame.monsterDie(mapId, killer, monCfgId, monActor, configId)\r\n    local dupInfo = getduplicate(mapId)\r\n    local state = dupInfo.state\r\n    if state == DuplicateState.FIGHT then\r\n        -- 更新任务\r\n        local curTask = getenvirvar(mapId, dup_task_info)\r\n        local updateThisTask = false\r\n        -- 处理击杀怪物相关的任务\r\n        local handledTask = this.processTaskUpdates(mapId, curTask, configId,\r\n            function(task, taskType)\r\n                local taskFinish = false\r\n                if taskType == DuplicateTaskType.KILL_MONSTER_COUNT then\r\n                    local maxCount = task.maxCount\r\n                    local count = task.count\r\n                    local nowCount = count + 1\r\n                    task.count = nowCount\r\n                    if nowCount >= maxCount then\r\n                        taskFinish = true\r\n                    end\r\n                    updateThisTask = true\r\n                elseif taskType == DuplicateTaskType.KILL_TARGET_MONSTER then\r\n                    local monId = task.monId\r\n                    if tonumber(monCfgId) == monId then\r\n                        local maxCount = task.maxCount\r\n                        local count = task.count\r\n                        local nowCount = count + 1\r\n                        task.count = nowCount\r\n                        if nowCount >= maxCount then\r\n                            taskFinish = true\r\n                        end\r\n                        updateThisTask = true\r\n                    end\r\n                end\r\n                return taskFinish\r\n            end)\r\n\r\n        if updateThisTask then\r\n            setenvirvar(mapId, dup_task_info, handledTask)\r\n            this.resDupTaskAsAll(mapId, handledTask)\r\n        end\r\n    end\r\nend\r\n\r\n-- 血量变化\r\nfunction PlayeGame.hpChange(actor, maxHP, curHP)\r\n    if not this.isPlayeGame(actor) then\r\n        return\r\n    end\r\nend\r\n\r\n-- 战斗伤害\r\nfunction PlayeGame.calcDmg(actor, dmg)\r\n    if not this.isPlayeGame(actor) then\r\n        return dmg\r\n    end\r\n    return dmg\r\nend\r\n\r\n--- 传送\r\nfunction PlayeGame.transfer(actor, mapCfgId, x, y)\r\n\r\nend\r\n\r\n--- 退出副本后\r\nfunction PlayeGame.afterQuit(actor, mapId, state, nextStateStartTime, configId)\r\n\r\nend\r\n\r\nfunction this.initDup(mapId, configId)\r\n    -- 初始化任务信息\r\n    this.initTaskInfo(mapId, configId)\r\n    -- 生成怪物\r\n    this.initMonster(mapId)\r\nend\r\n\r\n-- 布怪\r\nfunction this.initMonster(mapId)\r\n    this.genMonster(mapId, 0)\r\nend\r\n\r\nfunction this.genMonster(mapId, genMonId)\r\n    DuplicateCommon.DupGenMonsterCommon(mapId, genMonId)\r\nend\r\n\r\n-- 按阶段初始化任务\r\nfunction this.initTaskInfo(mapId, configId, stage)\r\n    local taskInfo = {}\r\n    setenvirvar(mapId, dup_task_info, taskInfo)\r\nend\r\n\r\nfunction this.genOneTask(taskId)\r\n    taskId = tonumber(taskId)\r\n    local task = {}\r\n    local taskType = ConfigDataManager.getTableValue(\"cfg_repTask\", \"type\", \"id\", taskId)\r\n    taskType = tonumber(taskType)\r\n    local param = ConfigDataManager.getTableValue(\"cfg_repTask\", \"param\", \"id\", taskId)\r\n    if taskType == DuplicateTaskType.KILL_MONSTER_COUNT then\r\n        task = { taskId = taskId, taskType = taskType, maxCount = tonumber(param), count = 0 }\r\n    elseif taskType == DuplicateTaskType.KILL_TARGET_MONSTER then\r\n        local split = string.split(param, \"#\")\r\n        local targetId = tonumber(split[1])\r\n        local count = tonumber(split[2])\r\n        task = { taskId = taskId, taskType = taskType, monId = targetId, maxCount = count, count = 0 }\r\n    elseif taskType == DuplicateTaskType.MONSTER_HP_REACH then\r\n        local split = string.split(param, \"#\")\r\n        local monId = tonumber(split[1])\r\n        local hpPercent = tonumber(split[2])\r\n        local maxCount = tonumber(split[3])\r\n        task = {\r\n            taskId = taskId,\r\n            taskType = taskType,\r\n            monId = monId,\r\n            targetPercent = hpPercent / 10000,\r\n            maxCount = maxCount,\r\n            count = 0\r\n        }\r\n    end\r\n    gameDebug.print(\"XXXXXX刷新任务:\", task)\r\n    return task\r\nend\r\n\r\n-- 处理任务更新的通用函数\r\nfunction this.processTaskUpdates(mapId, task, configId, processFunc)\r\n    local taskType = task.taskType\r\n    local taskFinish = processFunc(task, taskType)\r\n    -- 分支任务完成\r\n    if taskFinish then\r\n        gameDebug.print(\"XXXXXX任务完成:\", task.taskId)\r\n        -- 触发特定事件\r\n        this.triggerAction(mapId, task)\r\n        local nextTaskId = 99999\r\n        if not string.isNullOrEmpty(nextTaskId) then\r\n            local newTask = this.genOneTask(nextTaskId)\r\n            task = newTask\r\n            -- 下一个任务阶段布怪,\r\n            local nextGenMonId = 99999\r\n            this.genMonster(mapId, nextGenMonId)\r\n        else\r\n            -- 没有任务了\r\n        end\r\n    end\r\n    return task\r\nend\r\n\r\n--- 段触发某个事件\r\nfunction this.triggerAction(mapId, task, ...)\r\n\r\nend\r\n\r\n--- 奖励\r\nfunction this.reward(mapId, taskId)\r\n\r\nend\r\n\r\nfunction this.settlement(mapId, configId)\r\n    local mapPlayers = getmapplayer(mapId)\r\n    for _, actor in pairs(mapPlayers) do\r\n        -- 发协议\r\n        sendluamsg(actor, 0000, {})\r\n    end\r\nend\r\n\r\nfunction this.isPlayeGame(actor)\r\n    local mapId = getbaseinfo(actor, \"unimapid\")\r\n    local dupInfo = getduplicate(mapId)\r\n    if dupInfo == nil then\r\n        return false\r\n    end\r\n    local type = dupInfo.type\r\n    if type ~= DuplicateType.PlayeGame then\r\n        return false\r\n    end\r\n    return true\r\nend\r\n\r\nfunction this.resDupTaskAsAll(mapId, taskInfo)\r\n    if not taskInfo then\r\n        taskInfo = getenvirvar(mapId, dup_task_info) or {}\r\n    end\r\n    local dupInfo = getduplicate(mapId)\r\n    local players = dupInfo[\"players\"]\r\n    for index, actor in ipairs(players) do\r\n        sendluamsg(actor, 0000, taskInfo)\r\n    end\r\nend\r\n\r\nfunction this.resDupTaskAsOne(actor, taskInfo)\r\n    sendluamsg(actor, 0000, taskInfo)\r\nend"
  }
}